<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20183.19.0125.1454                               -->
<workbook source-build='2018.3.3 (20183.19.0125.1454)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Superstore_us' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='datagrid.autoupdate.max.filesize' value='100000000000' />
    <preference name='ui.discoverpane.stagingWebContentSwitch' value='1' />
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.registrationform.stagingWebContentSwitch' value='1' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
        <calculation class='tableau' formula='50000' />
        <range granularity='1000' min='0' />
      </column>
      <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
        <calculation class='tableau' formula='18.400000000000002' />
        <range granularity='0.10000000000000001' max='100.0' min='1.0' />
      </column>
      <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
        <calculation class='tableau' formula='500000' />
        <range granularity='25000' min='100000' />
      </column>
      <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
        <calculation class='tableau' formula='&quot;Names&quot;' />
        <members>
          <member value='&quot;\% quota ascending&quot;' />
          <member value='&quot;\% quota descending&quot;' />
          <member value='&quot;Names&quot;' />
        </members>
      </column>
      <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
        <calculation class='tableau' formula='0.59999999999999998' />
        <range granularity='0.01' max='1.0' min='0.0' />
      </column>
      <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
        <calculation class='tableau' formula='0.064000000000000001' />
        <range granularity='0.001' max='0.25' min='0.0' />
      </column>
    </datasource>
    <datasource caption='Sales Target Extract' inline='true' name='federated.0z0pi331stuxay1ce6y5f1yxvsw9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Target' name='hyper.0b9ww9a086u1d41dqjy2d0vs8f1i'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/ErickGiovanni/Dropbox/Superstore_Bar_Charts.twb Files/Data/Desktop 1/Sales Target.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.0b9ww9a086u1d41dqjy2d0vs8f1i' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>994</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Target</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales Target]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Target</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>805</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.319149' measure-ordering='alphabetic' measure-percentage='0.268085' parameter-percentage='0.412766' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sales Commission' inline='true' name='Sales Planning new' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sales Commission' name='Sales Planning newleaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/ErickGiovanni/Dropbox/Superstore_Bar_Charts.twb Files/Data/Superstore/Sales Commission.hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='Sales Planning newleaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Person</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sales Person]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales Person</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>41</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>43</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Achievement (estimated)' datatype='integer' default-format='C1033%' name='[Achievement (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]' scope-isolation='false' />
      </column>
      <column caption='Achieved Quota' datatype='string' name='[Achievement (variable) (copy)]' role='measure' type='nominal'>
        <calculation class='tableau' formula='if SUM([Achievement (copy)]) &gt;= [Parameters].[New Quota] then &quot;100% +&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.75 * [Parameters].[New Quota] then &quot;75-100%&quot;&#13;&#10;elseif SUM([Achievement (copy)]) &gt;= 0.5 * [Parameters].[New Quota] then &quot;50-75%&quot;&#13;&#10;else &quot;Below 50%&quot; end' />
      </column>
      <column datatype='integer' default-format='C1033%' name='[Base (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary]' />
      </column>
      <column caption='% of quota achieved' datatype='real' default-format='p0%' name='[Calculation_0440925131659539]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Achievement (copy)])/[Parameters].[New Quota]' scope-isolation='false' />
      </column>
      <column caption='Rank over 3' datatype='real' name='[Calculation_4120925132203686]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(INDEX() / 3 - 0.6,0) + 1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Sort by field' datatype='real' name='[Calculation_8140925133029303]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='if [Parameters].[Parameter 1 1]=&quot;Names&quot; then 0&#13;&#10;elseif [Parameters].[Parameter 1 1]=&quot;% quota descending&quot; then -[Calculation_0440925131659539]&#13;&#10;else [Calculation_0440925131659539] end' />
      </column>
      <column datatype='real' default-format='C1033%' name='[Commission (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([Parameters].[Commission Rate]*[Sales])/100' scope-isolation='false' />
      </column>
      <column datatype='string' name='[Estimate Compensation label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Estimated Compensation:&quot;' />
        <aliases>
          <alias key='&quot;Estimated Compensation:&quot;' value='Estimated total compensation' />
        </aliases>
      </column>
      <column datatype='real' default-format='C1033%' name='[OTE (Variable)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Base Salary] + ([Parameters].[Commission Rate]*[Parameters].[New Quota])/100' />
      </column>
      <column datatype='datetime' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column caption='Sales Person1' datatype='string' name='[Sales Person]' role='dimension' type='nominal' />
      <column datatype='integer' default-format='n#,##0;-#,##0' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='real' default-format='C1033%' name='[Total Compensation]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MIN([Base (Variable)]) + SUM([Commission (Variable)])' />
      </column>
      <column datatype='string' name='[Total Sales label]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Total Sales:&quot;' />
        <aliases>
          <alias key='&quot;Total Sales:&quot;' value='Total' />
        </aliases>
      </column>
      <column-instance column='[Base (Variable)]' derivation='Min' name='[min:Base (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Commission (Variable)]' derivation='Sum' name='[sum:Commission (Variable):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Achievement (variable) (copy)]' derivation='User' name='[usr:Achievement (variable) (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Call Center)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date))' hidden='true' name='[Action (MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Next Button)' hidden='true' name='[Action (Next Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2310128142449424]' />
        </groupfilter>
      </group>
      <group caption='Action (Previous Button)' hidden='true' name='[Action (Previous Button)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Next (copy)]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.365688' measure-ordering='alphabetic' measure-percentage='0.379232' parameter-percentage='0.255079' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[usr:Achievement (variable) (copy):nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;50-75\%&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Below 50\%&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;100\% +&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;75-100\%&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#5f9ed1'>
              <bucket>&quot;[Sales Planning new].[sum:Commission (Variable):qk]&quot;</bucket>
            </map>
            <map to='#898989'>
              <bucket>&quot;[Sales Planning new].[min:Base (Variable):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Base Salary' datatype='integer' name='[Base Salary]' param-domain-type='range' role='measure' type='quantitative' value='50000'>
          <calculation class='tableau' formula='50000' />
          <range granularity='1000' min='0' />
        </column>
        <column caption='Commission Rate' datatype='real' default-format='n#,##0.0&quot;%&quot;;-#,##0.0&quot;%&quot;' name='[Commission Rate]' param-domain-type='range' role='measure' type='quantitative' value='18.400000000000002'>
          <calculation class='tableau' formula='18.400000000000002' />
          <range granularity='0.10000000000000001' max='100.0' min='1.0' />
        </column>
        <column caption='New Quota' datatype='integer' default-format='c&quot;$&quot;#,##0,K;(&quot;$&quot;#,##0,K)' name='[New Quota]' param-domain-type='range' role='measure' type='quantitative' value='500000'>
          <calculation class='tableau' formula='500000' />
          <range granularity='25000' min='100000' />
        </column>
        <column caption='Sort by' datatype='string' name='[Parameter 1 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Names&quot;'>
          <calculation class='tableau' formula='&quot;Names&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='Sample - Superstore' inline='true' name='dataengine.42019.618651678240' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='dataengine.42019.618651678240leaf'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/ErickGiovanni/Dropbox/Superstore_Bar_Charts.twb Files/Data/Desktop/Sample - Superstore.hyper' default-settings='yes' port='' sslmode='' username='tableau_internal_user'>
              <calculations>
                <calculation column='[Number of Records]' formula='1' />
              </calculations>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='dataengine.42019.618651678240leaf' name='Extract' table='[Extract].[Extract]' type='table' />
        <calculations>
          <calculation column='[Number of Records]' formula='1' />
        </calculations>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>545</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1036</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1318</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3128</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>674</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1996</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>4372</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>13</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>3544</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>3</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>1397</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>50</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>17</approx-count>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[dataengine.42019.618651678240].[ctd:Customer Name:qk]&quot;' value='Count of Customers' />
        </aliases>
      </column>
      <column caption='Days to Ship Actual' datatype='integer' name='[Calculation_0831103151444568]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date])' />
      </column>
      <column caption='Sales Forecast' datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Calculation_5421109230915137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1])' />
      </column>
      <column caption='Ship Status' datatype='string' name='[Calculation_6401103171259723]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_0831103151444568]&gt; [Calculation_6861103170623145] then &quot;Shipped Late&quot; &#13;&#10;elseIF [Calculation_0831103151444568]= [Calculation_6861103170623145] then &quot;Shipped On Time&quot;&#13;&#10;Else &quot;Shipped Early&quot; end' />
        <desc>
          <formatted-text>
            <run>Was shipment early, ontime or late based on ship mode</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Days to Ship Scheduled' datatype='integer' name='[Calculation_6861103170623145]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE  [Ship Mode]&#13;&#10;WHEN &quot;Same Day&quot; THEN 0&#13;&#10;WHEN &quot;First Class&quot; THEN 1&#13;&#10;WHEN &quot;Second Class&quot; THEN 3&#13;&#10;WHEN &quot;Standard Class&quot; THEN 6&#13;&#10;END' />
      </column>
      <column caption='Order Profitable?' datatype='boolean' name='[Calculation_9060122104947471]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{fixed [Order ID]:sum([Profit])}&gt;0&#13;&#10;// calculates the profit at the order level' />
        <aliases>
          <alias key='false' value='Unprofitable' />
          <alias key='true' value='Profitable' />
        </aliases>
        <desc>
          <formatted-text>
            <run>A level of detail expression that calculates profitability for each Order</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Profit per Customer' datatype='real' default-format='C1033%' hidden='true' name='[Calculation_9321103144526191 1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/countD([Customer Name])' />
      </column>
      <column caption='Sales per Customer' datatype='real' default-format='C1033%' name='[Calculation_9321103144526191]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Sales])/countD([Customer Name])' />
      </column>
      <column caption='Profit Ratio' datatype='real' default-format='p0.0%' name='[Calculation_9921103144103743]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Profit])/sum([Sales])' />
      </column>
      <column caption='Sales above Target?' datatype='string' name='[Calculation_9951107165644870]' role='measure' type='nominal'>
        <calculation class='tableau' formula='If Sum([Sales])&gt;SUM([federated.0z0pi331stuxay1ce6y5f1yxvsw9].[Sales Target]) then &quot;Above Target&quot; else &quot;Below Target&quot; end' />
        <desc>
          <formatted-text>
            <run>Used with &quot;Sales Target&quot; data source</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[Customer ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='p0.00%' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
      <column datatype='real' hidden='true' name='[Order Quantity]' role='measure' type='quantitative' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' hidden='true' name='[Product ID]' role='dimension' type='nominal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
      <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[Row ID]' role='measure' type='quantitative' />
      <column caption='Units estimate' datatype='real' default-format='n#,##0;-#,##0' hidden='true' name='[Sales est (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND([Quantity]*(1-[Parameters].[Parameter 2])*(1+[Parameters].[Parameter 1]),0)' scope-isolation='false' />
      </column>
      <column caption='Profit per Order' datatype='real' default-format='C1033%' name='[Sales per Customer (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Profit])/countD([Order ID])' />
      </column>
      <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column-instance column='[Customer Name]' derivation='CountD' name='[ctd:Customer Name:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_6401103171259723]' derivation='None' name='[none:Calculation_6401103171259723:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_9060122104947471]' derivation='None' name='[none:Calculation_9060122104947471:nk]' pivot='key' type='nominal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Calculation_5421109230915137]' derivation='Sum' name='[sum:Calculation_5421109230915137:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales est (copy)]' derivation='Sum' name='[sum:Sales est (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Week-Trunc' name='[twk:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_9921103144103743]' derivation='User' name='[usr:Calculation_9921103144103743:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9951107165644870]' derivation='User' name='[usr:Calculation_9951107165644870:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Action (Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,MONTH(Order Date))' hidden='true' name='[Action (Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Category,YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (Category,YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Action (Customer Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Segment:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Delayed?)' hidden='true' name='[Action (Delayed?)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment) 1' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Product Category,Segment)' hidden='true' name='[Action (MONTH(Order Date),Product Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Order Date),Segment)' hidden='true' name='[Action (MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,Category,MONTH(Order Date))' hidden='true' name='[Action (Order Profitable?,Category,MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[Category]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Order Profitable?,MONTH(Order Date),Segment)' hidden='true' name='[Action (Order Profitable?,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State) 1' hidden='true' name='[Action (Postal Code,State) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Postal Code]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Postal Code,State)' hidden='true' name='[Action (Postal Code,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Postal Code:ok]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Product Category,ProductSub-Category,Segment)' hidden='true' name='[Action (Product Category,ProductSub-Category,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,Region,Segment)' hidden='true' name='[Action (ProductSub-Category,Region,Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[Region]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (ProductSub-Category,State)' hidden='true' name='[Action (ProductSub-Category,State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),Product Category,ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)' hidden='true' name='[Action (QUARTER(Order Date),MONTH(Order Date),ProductSub-Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[qr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (Segment)' hidden='true' name='[Action (Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status)' hidden='true' name='[Action (Ship Status)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)' hidden='true' name='[Action (Ship Status,Customer Name,Order Date,Order ID,Product Name,Ship Mode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[Customer Name]' />
          <groupfilter function='level-members' level='[Order Date]' />
          <groupfilter function='level-members' level='[Order ID]' />
          <groupfilter function='level-members' level='[Product Name]' />
          <groupfilter function='level-members' level='[Ship Mode]' />
        </groupfilter>
      </group>
      <group caption='Action (Ship Status,YEAR(Order Date),WEEK(Order Date))' hidden='true' name='[Action (Ship Status,YEAR(Order Date),WEEK(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_6401103171259723]' />
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[twk:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (Transaction Profit,MONTH(Order Date),Segment)' hidden='true' name='[Action (Transaction Profit,MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_9060122104947471]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date))' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Product Category)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Product Category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[mn:Order Date:ok]' />
          <groupfilter function='level-members' level='[none:Category:nk]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Order Date),MONTH(Order Date),Segment)' hidden='true' name='[Action (YEAR(Order Date),MONTH(Order Date),Segment)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Order Date:ok]' />
          <groupfilter function='level-members' level='[tmn:Order Date:ok]' />
          <groupfilter function='level-members' level='[Segment]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location'>
          <field>[Country]</field>
          <field>[Region]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
        <drill-path name='Product'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
          <field>[Product Name]</field>
        </drill-path>
      </drill-paths>
      <folder name='Customer' role='dimensions'>
        <folder-item name='[Customer ID]' type='field' />
        <folder-item name='[Customer Name]' type='field' />
        <folder-item name='[Segment]' type='field' />
      </folder>
      <folder name='Order' role='dimensions'>
        <folder-item name='[Order Date]' type='field' />
        <folder-item name='[Order ID]' type='field' />
        <folder-item name='[Ship Date]' type='field' />
        <folder-item name='[Ship Mode]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.299065' measure-ordering='alphabetic' measure-percentage='0.42757' parameter-percentage='0.273364' show-aliased-fields='true' show-structure='false' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Calculation_9921103144103743]' max='0.5' min='-0.5' palette='tableau-orange-blue' type='interpolated' />
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_6401103171259723:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Shipped Early&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Shipped Late&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shipped On Time&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#000000'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#000000'>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9921103144103743:qk]&quot;</bucket>
            </map>
            <map to='#1c70ae'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_5421109230915137:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[dataengine.42019.618651678240].[usr:Calculation_9330126204734562:qk]&quot;</bucket>
            </map>
            <map to='#414451'>
              <bucket>&quot;[dataengine.42019.618651678240].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Calculation_1641214165608856:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[dataengine.42019.618651678240].[sum:Sales est (copy):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Segment:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_9951107165644870:nk]' palette='nuriel_stone_10_0' type='palette'>
            <map to='#027b8e'>
              <bucket>&quot;Above Target&quot;</bucket>
            </map>
            <map to='#a39fc9'>
              <bucket>&quot;Below Target&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_9060122104947471:nk]' type='palette'>
            <map to='#6388b4'>
              <bucket>true</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='New Business Growth' datatype='real' default-format='p0%' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='0.59999999999999998'>
          <calculation class='tableau' formula='0.59999999999999998' />
          <range granularity='0.01' max='1.0' min='0.0' />
        </column>
        <column caption='Churn Rate' datatype='real' default-format='p0.00%' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.064000000000000001'>
          <calculation class='tableau' formula='0.064000000000000001' />
          <range granularity='0.001' max='0.25' min='0.0' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0z0pi331stuxay1ce6y5f1yxvsw9'>
        <column datatype='integer' name='[Sales Target]' role='measure' type='quantitative' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='dataengine.42019.618651678240'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.0z0pi331stuxay1ce6y5f1yxvsw9'>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year-Trunc' name='[tyr:Order Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='dataengine.42019.618651678240' target='federated.0z0pi331stuxay1ce6y5f1yxvsw9'>
      <column-mapping>
        <map key='[dataengine.42019.618651678240].[mn:Order Date:ok]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[mn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[none:Category:nk]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[none:Category:nk]' />
        <map key='[dataengine.42019.618651678240].[none:Segment:nk]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[none:Segment:nk]' />
        <map key='[dataengine.42019.618651678240].[tmn:Order Date:ok]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[tmn:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[tyr:Order Date:ok]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[tyr:Order Date:ok]' />
        <map key='[dataengine.42019.618651678240].[yr:Order Date:ok]' value='[federated.0z0pi331stuxay1ce6y5f1yxvsw9].[yr:Order Date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Bar Chart with Color Range '>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Sub-Category:nk]</rows>
        <cols>[dataengine.42019.618651678240].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Bar chart1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Region:nk]</rows>
        <cols>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Bar chart2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:State:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</rows>
        <cols>[dataengine.42019.618651678240].[none:Region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Simple Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[none:Region:nk]</rows>
        <cols>([dataengine.42019.618651678240].[none:Category:nk] * [dataengine.42019.618651678240].[sum:Sales:qk])</cols>
      </table>
    </worksheet>
    <worksheet name='Stacked Bar Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='dataengine.42019.618651678240' />
          </datasources>
          <datasource-dependencies datasource='dataengine.42019.618651678240'>
            <column datatype='real' default-format='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[dataengine.42019.618651678240].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[dataengine.42019.618651678240].[sum:Sales:qk]</rows>
        <cols>[dataengine.42019.618651678240].[none:Sub-Category:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' maximized='true' name='Simple Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC3E33E3-0FA1-48EC-B535-B215475DB981}' />
    </window>
    <window class='worksheet' name='Bar Chart with Color Range '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1AEC3D9-516E-4304-BC62-E7BE4F03DC93}' />
    </window>
    <window class='worksheet' name='Stacked Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Segment:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{285BD637-4651-44FD-8CDE-4FC3BB294172}' />
    </window>
    <window class='worksheet' name='Bar chart1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09DD0E05-0AF4-40CF-B643-D542A30DF1BE}' />
    </window>
    <window class='worksheet' name='Bar chart2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[dataengine.42019.618651678240].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[dataengine.42019.618651678240].[none:Category:nk]</field>
            <field>[dataengine.42019.618651678240].[none:Region:nk]</field>
            <field>[dataengine.42019.618651678240].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{45540970-2797-4F5A-9EAC-ACA2FF3E5E5E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Bar Chart with Color Range ' width='384'>
      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
    </thumbnail>
    <thumbnail height='358' name='Bar chart1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAFmCAYAAABk2k0gAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXhU9aH/8fdMMklIyAJkIZuJQcIqCIKUCCjgvlD3tup1362trV77KNR6
      qT7cVmqt1O16ebyiFaSIxQ1F1IJl04iAkBAwhIQQIJmQkCGTZTIzvz/ym1OGTEIgyyQ5n9fz
      8DzJWb/JIedzvsv5jsXr9XoRERHTsQa7ACIiEhwKABERk1IAiIiYlAJARMSkFAAiIialABAR
      MSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCIiEkpAERE
      TEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABER
      k1IAiIiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETE
      pBQAIiImpQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUAkBExKQUACIiJqUAEBEx
      KQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSkFAAiIialABARMSkFgPRqubm5wS6C
      SK+lABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEpBYCI
      iEkpAERETEoBICJiUqHBLoCISG+1atUqSktLT7jdrFmziI+P74YSnRwFgIjIKSooKGD79u0n
      3G7mzJkKABGRvujcc89l+PDhra7viTd/UACIiHRYZmYm55xzTrCLcdIUACIivZzT6SQ0NJSw
      sLCA671eL+Xl5VRUVBATE0NycjI2m00BICLSnRYvXsx3333HHXfcEbDZaOvWrbz55puMHDmS
      O+64w1i+cuVKPv/8cy6++GIuvPBCKioqWLFiBVu2bMHlcnHppZdy1VVX4fF4eOyxx7BYLPzq
      V7/igw8+IC8vj/r6euNYsbGx3H777QoAEZHuVFdXx5EjRzh8+HDA9S6XC4fDgdPp9Fve0NCA
      w+GgoaGB0tJSnn/+eRwOh7E+MjISaH7a9y2fO3cuXq8XgJiYGEJCQqiqquLIkSMsXLhQASAi
      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
      AOnd1AcgfdX+/fu5++67KS8vb7Guf//+XHbZZdx7773Exsa2WF9SUkJqamqLfoFt27Zxxx13
      ABASEqImIBGRnig1NZW///3v/OQnPyEyMtJv3dGjR1m6dCnXXXcdubm5LfY97bTTCAkJwePx
      UFFRQX5+Prm5uTQ0NBAdHQ00jzRSDUB6NdUAxAzq6+v54osv+OSTT9i0aRNut9tYN2DAAN55
      5x0GDhxoLCsqKuKtt95i1apV1NXVtXpcBYD0agoAMZuKigpee+01li9fbiz7z//8T37yk58A
      cPjwYW688UbsdrvfflarlZCQEJqamvDd9tUJLCLSiyQkJPDEE0/gdrtZsWIFAD/88IOx/umn
      nzZu/tnZ2Vx99dWMHj2aoUOHEhoayh133MG2bdsABYCISI9TVlZGTU0Nw4cPb3WbrKws42uX
      y2V87Rs5FBoayv/8z//Qv3//Vo+hTmARkR4mNzeXm2++mV/84hfG0/qxSkpKWLJkifH9yJEj
      ja994/+bmpr8XigD+Oabb9i/f7/xvWoAIiI91Pr161m/fj3p6emcfvrp9O/fn+3bt1NSUmJs
      Ex4ezuTJk43v09LSjPWPPfYYl1xyCY2NjXz11Vd8++23fsdXAIiI9DA2m83v+3379rFv376A
      2/7ud78jPT3d+P7CCy9k4cKFQPO4/0A1CB81AYmI9DCXXnopb7zxBldeeSX9+vVrsd5isZCT
      k8OiRYu46KKL/NbdeeedLZYBZGRkMHfuXCZNmgRAv379NAxUejcNA5W+zuv1cvjwYcrKyggP
      Dyc0NJS0tLQTfgDM3r17+eGHH/B6vZx11lkkJCS02EZNQCIiPZjFYmHQoEEMGjTopPbLzMz0
      m1QuEDUBiYiYlAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQC
      QETEpBQAIiImpQAQETGp/wd3DDJn783c/QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Bar chart2' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXQU55nv8W9Vr2q19h0kgcQiIXaxmR1jsM1ij+1gAnHsOGPjmBvIjH1n
      krnMJEOOMzNJTmZyJ547Ey+JHW/AkOB4wQvYLMEBs+9gZCRAlhBCEpKQ1HtX3T8Y2siAGkSj
      6qafzzkc091VXU934/pVvfXW+yq6rusIIYSIK4qiKKrRRQghhDCGBIAQQsQpCQAhhIhTEgBC
      CBGnJACEECJOSQAIIUSckgAQQog4JQEghBBxSgJACCHilASAEELEKQkAIYSIU2ajCxBCGC8Y
      DBIIBABQFAWTyYSqqiiK0q338/v9uFwunE4nJpMpkqWKCJIAEEKwdetWfvnLXwJgsVjo1asX
      3/zmNxk1alS33m/Tpk0sW7aMlStX0q9fv0iWKiJImoCEELhcLhobG5k1axaTJ0+mpqaGZcuW
      0djYCICu65w/f56GhobQmcJFXq+XlpYWAoFA6LUhQ4bwzDPPkJeX12n9xsZG/H5/6Dm/34/f
      78fr9dLU1ITX6+3BTy3kDEAIAUBCQgKzZs0iPz+fCRMmsGTJEk6cOEFqaipvv/02q1evxuVy
      MXToUP72b/+WpKQkNm/ezIoVK2hubiY7O5u0tDSeeeYZWlpaePPNNxk/fjzBYJDf//73rFmz
      Bo/Hw8CBA3nqqafIycnh2Wefpa6ujvb2ds6cOUNhYSH//M//TGJiotFfR1yQMwAhRCcdHR3s
      2rULRVFIT0+noqKCZ599lkmTJvE3f/M3bNu2jdWrV3Pq1Cn+5V/+BYvFwsMPP0xCQgIHDhwA
      4Pz58+zfvx+/38/hw4d59tlnKS8v5/HHH+fYsWM8++yzaJrGyZMnOXLkCMOGDWPy5Ml8+umn
      HD161OBvIH7IGYAQAoDm5maeeOIJNE2jtbWV+fPnU1RUxO9//3uCwSADBgwgKSmJ4uJidu/e
      TV5eHrqu8/3vf58+ffrQ2tpKRUXFZe+7fft2MjMz+d73vofdbqetrY3nn3+eYDAIwG233caT
      Tz5JXV0db7/9Nh6Pp6c/etySABBCABeagGbMmMHatWvp168fixYtQlVV2tvbcblc/PrXv8Zq
      taJpGoWFhXR0dGC323E4HF2+b3t7O4mJidjtdhRFISMjA5/Px8XJCC/2NrqRXkeieyQAhBAA
      2O125s+fz5gxY/jhD3/I8uXLeeaZZ+jTpw9Wq5WnnnqKUaNG4Xa7OXXqFJqm0djYyCuvvMLk
      yZPZvn37Fd+3uLiYt956iwMHDlBcXMymTZvo3bu3dA+NAhIAQggURQn9mTx5Mj/4wQ/453/+
      Z372s5+xZMkSRo0axQ9/+EMKCgpobGykvLycH/3oRyxcuJB169axYcOGq+7Qp0+fzpo1a/jf
      //t/k5aWRkNDA9///vdRVbXTUf/F/6qqXJrsKYpMCi+EOHfuHCdOnGDIkCHYbDZ0XefAgQN4
      vV6GDh2K3+/n4MGDnD9/npSUFMrKyrDZbDQ2NmK1WnG5XDz//PNUV1fz2muv0draytGjRxk1
      ahRWq5Vz587x6aefcv78eQYPHszgwYNRFIWKigqsVitFRUX4fD727dtHSUkJKSkpRn8ltzxF
      URQJACFEt3z++ec8/fTTZGRk4HK5qK2tZcmSJSxcuNDo0sQ1kAAQQnSbz+dj9+7dHD9+HE3T
      KCsrY8SIEVgsFqNLE9dAAkAIIeKUoihKlxeBg8Egmqb1VD1CCCF6UJcB4Ha75aYM0eNaW1vl
      IqAQPaDLAHA6nTidzp6qRQgAAoEAmZmZRpchxC1POtwKIUSckgAQQog4JQEghBBxSgJACCHi
      lASAEELEKQkAIYSIUxIAQggRpyQAhBAiTkkACCFEnJIAEEKIOCUzggkhxA0KBHVc/qDRZYTl
      sJowq1/OuywBIIQQN6iuzceG4y1GlxHW3SVp5CRZQ4+lCUgIIeKUBIAQQsQpCQAhhIhTEgBC
      CBGnJACEECJOSS8gIYS4QRnBs0xxbzS6jLBStLuB7NBjCQAhhLhBDt1FUeC40WWEp7s7PZQm
      ICGEiFMSAEIIEackAIQQIk5JAAghRJySABBCiDglASCEEHFKAkAIIeKUBIAQQsQpCQAhhIhT
      EgBCCBGnJACEECJOSQAIIUSckgCIYbquo2ma0WUIIWKUBEAMO3v2LOvWrUPX9eta72qhca2B
      omnaVbcZ7jUhRPSQ4aBjkKZpHDhwgE2bNnH27FmampqYMWMGOTk5tLW18eGHH3LkyBE6OjoY
      NGgQ8+bNIzExkZqaGlauXEl9fT0lJSUsXLgQp9OJruts3bqVDz/8kEAgwJQpU5g5cyYmk6nT
      doPBIJs2bWLjxgvjnt9xxx1MmzYNRVHo6Ohg9erVHD58mPT0dBYuXEjfvn3RdZ0vvviCVatW
      UV9fT2lpKQsWLMDpdBrx1UU1v+bjuaO/MLqMsMZlT2VM1kSjyxARIAEQg06cOMEf/vAHysvL
      SUhIICkpiZMnT5KTk8N7772Hx+Ph0UcfxWw2s2bNGjZs2MDMmTN55ZVXGDNmDOPHj2flypWs
      WbOGhx9+mBMnTrB27Vq+/e1v43A4eP7558nOzqa8vLzTdisqKti4cSOPP/44AP/1X/9Ffn4+
      /fv3Z+3atbhcLv7+7/+e/fv38+KLL/L3f//3ALz66quMGTOG2267jZUrV/Lmm2/yzW9+E0VR
      evy7i2a6rhPwtBpdRlhawGN0CSJCJABi0NmzZ+nduzejR49mx44d3HPPPaGd6V133UVSUhIm
      kwld1+nXrx/Nzc3U1tZiMpmYPHkyCQkJ3Hvvvfznf/4n7e3tHDx4kJEjR9K/f38URWHatGns
      2bOnUwDous6ePXuYOHEiffv2BWDSpEns3r2bvLw8jh8/zje+8Q1SU1OZNGkSn376KZWVldhs
      NkwmE1OmTMFut3Pvvffy61//mvb2dpKSkoz4+qKWqgUp2f2+0WWElaH0g7w7jC5DRIAEQAwq
      Kipi3bp1rF69muTkZNxuNw6HA4DU1FTgQnPN3r17+fOf/8xDDz1Ea2srmZmZ2O12AJKTk0lM
      TKS9vZ3GxkaGDRsWCpG+ffuye/dugsFgqBlI0zRaWloYOXJkqI6+ffvypz/9Ca/Xi9lsJi0t
      DQBVVcnPz6e1tRWbzUZWVhY2my20XYfDQUdHB0lJSQSDQQKBQKfP5/f7cblcN/EbjE5awB1+
      oSgQr79PV0w+Lzaji7gGXq+X4CW/nQRADMrJyeGJJ55g48aN7Nmzh3//939n/vz59OvXD4CO
      jg7effddDh8+zPz58yktLWXbtm1YrdbQTl5RFEwmE4FAAK/XG9pBA1gsFoLB4GUBEAwGMZu/
      /Cdjs9ku/IMKBtF1vdM1A4vFgtfrBei0XVVVUVUVv98fenzpewKYTKZO9cSLoEkj/X8CPJo5
      ExPj8vfpktlidAXXxGyxYL7kt5MAiEGKopCXl8ekSZMwm82kp6fz3//93/zd3/0dbrebl19+
      GZ/Px9KlS8nKygLA6XTS3t6OpmmoqkowGMTr9WK320lKSqK19cu25/b2dmw2GxbLl/+oL+6U
      Ozo6Qs+1traSlJQUWs7n83V6j759+2K32zttNxAI4Pf7Q2ciF4PoUqqqXvZcPFCwUpA11+gy
      wkpylsTl79MlNTY6VJpUFS757SQAYlBTU1PoqNlqtVJWVsaGDRvQdZ1t27bhcrl48sknO/W0
      ycjI4OzZs7S2tpKWlkZ1dTWappGSkkJBQQGHDh1iwoQJKIrC/v37KSgo6HSRVlEU8vPzOXDg
      AMOHD0dVVQ4cOEBBQQGJiYmYTCZOnjxJeno6Ho+Hqqoq7rjjDsxmM/X19VfcruhMCyocPhD9
      30u/RBtJfY2uQkSCBEAMOnbsGG+//TbZ2dl0dHSwZ88epk6diqIoHD16FFVVWbduXWj5oqIi
      RowYQXFxMS+88AKDBw9m27Zt3H333VitVkaOHMnmzZt5/fXXsdlsHDhwgO9+97sAbNmyhSNH
      jvCd73yHcePG8e///u+sWLECgKqqKubNm4fFYmHKlCmsWbOG2tpaPv/8cwoKCigsLETXdYqK
      injxxRcpKyvrtF3Rma4H+eL0p0aXEVZWWx5QHnY5Ef0U/XrvIhKG03WdhoYG9u3bx/Hjx5k9
      ezZ9+vQB4PDhwzQ3N3daPiMjg7KyMrxeLzt27KChoYHi4mKGDx8eOspvbGxkx44daJrGiBEj
      yM/PJxAI8Itf/IIJEyYwZcoUAOrq6tizZw+6rjNmzBhycnJCNR0+fJiKigrS0tKYMGFCqJ3Y
      4/Gwc+dOGhoa6NevX6cLzldy5swZcnNzI/69RTu/18OrP1psdBlhld95PyPuuNfoMqJL4zE4
      +LrRVYQ38jFIvbCvUBRFkTOAGKQoCtnZ2QwaNIhAIBDqlgkwZMiQq65ns9mYPHnyFV/LzMxk
      9uzZnZ5raGggNzeX8ePHh57Ly8tjzpw5V6xpyJAhV9y+3W6/6naFEMaRAIhhOTk5N7UtPTs7
      m4ULF3a6GCxuHlU1MXj4aKPLCCsrp5fRJYgIkQCIYVar9aa2pZtMJunt0YMUBVJS040uIyzb
      //TgErEvNvouCSGEiDgJACGEiFMSAEIIEafkGoAQUcRiOW90CWGZVF/4hURMkAAQIkroisZp
      82dGlxGWRS0mzegiRERIAAgRJXyayr9U9De6jLAeTkmjsK/RVYhIkGsAQggRp+QMwCDBYBD1
      f0YQ9Pv96LreadhkEX/MmsbcE9VGlxHWgAGlRpcgIkQCwAA+n4+f//znLF68GJ/Px1//9V/j
      crlYunQpM2fOlBCIUyZdZ+7JL4wuI6yUlui/UC2ujTQBGeCLL77g9OnTOJ1O1q5dy5gxY/iH
      f/gH3nvvvdAkKkIIcbPJGYABAoEAVqsVXdfZvXs3jz32GDk5OWiadtn0iOIrqk/BkcNGVxHe
      tNvBnmB0FUJ0SQLAAAUFBbS3t/P0009z/vx5ysrK2LFjB8nJyaGZssRVtLfD6VqjqwgvGDS6
      AiHCkgAwgMPh4Cc/+Qn79u1j6NChJCQk4HQ6eeSRRy6bH1cIIW4W2dsYJDs7mwEDBnD48GEU
      RSElJYWkpCSjyxJCxBEJAAMEAgF++ctfsnPnTsxmM48//jiKovDnP/+ZZcuWhbqHCiHEzSR7
      GgMcPXqUEydO8NJLLzFr1iwA+vTpQ0NDg/QCEkL0GAkAAwQCARwOR6fJXJqamvD5ZJAtIUTP
      kSYgA5SWXriT8ic/+Qkul4uKigqqqqqYPXu29AISQvSYbgWA3+/n1KlTnfqsp6enk52dHZGi
      3G43NTU1FBcX35JTEiYkJPCjH/2IDz/8kKNHj6IoCo8++ihTpkyRu4CFED2mWwHQ3t7OK6+8
      Qk5OTmjC8KFDh0YsAOrr69m0aRN9+vTBZDKxYsUK7rvvPhISYvvGGl3XQ39PSkpi3rx5oecu
      7vh1XZcQEEL0iG4FgK7rJCYm8s1vfpOUlJTQ88FgEJ/PF9pR+/1+NE3DarXi8XiwWq0EAgFc
      Lhepqal4PB4URaG9vR2Px0N2djZWq5XCwkIeeughLBYLHR0dHDhwgOnTpxMIBEJNJJqmYbPZ
      APB6vaiqisViwePxYDab0TQNt9uN0+lE13Wam5txu91kZ2cb1szy9ttvs2HDhqu+XlpayqJF
      i+ReACFEj4jonqa6upp169bxne98B4CdO3dy5swZ7r//fl5++WWGDBnCtm3baG9vZ9myZTz7
      7LMEg0ECgQBut5uBAwfy6KOPcvbsWV5//XWefPJJfvOb39Da2spzzz2Hqqp87Wtfo6WlhbNn
      z/IXf/EXAKxdu5bc3FwmTJjAqlWr6Nu3Lzt27MDn8/H444+zadMmKioqsNvtaJrGokWLSE9P
      j+RHvyYlJSWhM6YryczMlC6gQoge0+0A8Pv9VFVVkZiYCEBWVha6rnfqyaJpGsH/uSU+GAyy
      du1a7rzzTsaPHx9q5pgxYwYjRozg7Nmz/Nd//Rdw4QwjGAySkJDA0qVL+Yd/+AeeeuopnE4n
      AFu3bsXv94e2EwwG0TQt9Pd33nmHmTNnMmnSJE6fPs2JEydYunQpycnJvPHGG2zdupW5c+d2
      96N3W2lpaegCsBBCGK3bAeB2u9myZUuouWLixIlh72SdMWMG06ZNQ1VVvF4vZrOZwsJCLBYL
      KSkpV2z7vvicoijX3DY+adIk7rzzThRFoa6uDk3T2LdvH3AhXGpqaq7no94UO3bs4N1336Wt
      rS30XGlpKY899pg0AQkhekS39zTJycl861vf6nQNoKqqqst1ioqKut3EcekF1HCKi4s7BYeu
      66EzhN69exvS/HOpxsZGfvGLXzB79mw++ugj5s+fz/bt23E6ndIEFMa+llY2HKswuoywFvkD
      yMAeItpF9FBTVVXOnz+Px+NB13Wqqqoi0nPHZrNRW1tLSUkJuq5jMplobGwkGAzS1tZGbW0t
      eXl5V1y3V69e+P1+SktLycvLo6GhwfAzgPr6enr37s3ChQs5fPgw06dPp1+/fqxYsaLTTGHi
      cm4tSGMM3DCnce0HLEIYpVsBYDKZcDqdl/XRz8zMxGKxsHz5cgDS0tIYPHgwcKHv+1ebNhwO
      R+g9VFUNNSGZTKZOzUnTp0/n+eefx+FwMG/ePIqKinj//ff54Q9/CEBiYmKoR5DNZgv9HS6c
      dYwfP55f/epXWK1WNE0zpP3/Uk6nk/b2dnRdJzU1lc8++wyHw0F9fT1ut7vLC8VCCBEpin49
      bSvXwO/309raitPpjFh3S13XcbvdBAIBkpKSUBQFr9fL+fPnSU1NvaYd5sXup9HQzBIMBvn5
      z3/OokWL+OKLL/j5z3+O3+9n2rRpLF68+Ja8+e16nDlzhtzc3Cu+tu2TLbzzh9/3cEXX7wf/
      uJyU1LTrWkfzeKh59C9vUkWRkzL/QVIeuN/oMqJL4zE4+LrRVYQ38jFI7QOAoihKxK82WiwW
      MjMzI/qeiqLgcDg6PWez2cjKyrrm9zCbzSQnJ0e0ru4ymUz8n//zfwDIyMjg3/7t33C5XBQW
      Fsb9zl8I0XOku0kP0jSNAwcOkJOTQ15eHrqus23bNj799FP69+9Pfn6+0SVGPbvdRobBF/Gv
      hdFnmUJcCwmAHtTU1MTPfvYzli9fTl5eHkeOHGH58uXcddddrFmzBo/Hw4MPPihDQXQhMz2D
      YcOGGF1GWHIdR8QCCYAe1NjYiMViobCwEIAVK1Ywc+ZMnn76aXbt2sUrr7zCX/zFX3S6iC06
      M3f4SazpMLqMsJSg9AIS0U8CoAeZTCZMJhOKonDu3Dm2bdvGr371KxRFwWaz4fF4QndOiyur
      b9P59FT0f0dDAyAxLqKdBEAPysvLw2az8X//7/+lrq6OgQMHUlZWhq7rHDlyhKysLDn6D6NW
      MbPZHP2jwj6iKHIj2Fd8uOM4laebjS6jSymJdh6aOdToMnqMBEAPSkpKYtmyZbz99tsMGDCA
      efPmoSgKPp+PxsZGHnjgAekFJG5Z+z4/w9bDxg/D0pW8dKcEgLh5CgsLWbJkSafnrFbrZc8J
      IcTNJgEQw3RdR9d16XIoYsI3nB8xN+1PRpfRJWtKb8DYkQJ6kgRADKuvr2f37t3Mnj37urqO
      app2xdC41kDRNO2qo7OGe03CKn5lmlpJNZ81uowuKeb4mpNbAiAGaZrG7t272bx5M01NTTQ0
      NHDXXXeFbi5rampi3bp1+Hw+Hn30UeDCzv3EiROsWrWKpqYmiouLeeihh0hJSUHXdTZv3sz6
      9esJBoNMmDCB2bNnXzZ2UzAYZP369WzevBmA22+/nZkzZ6IoCm1tbaxcuZJjx46RkpLCggUL
      GDBgwGXb7devH9/4xjc6jSIr4sOvrDPYmtDX6DK6lGdP5ddGF9GD5HAsBlVVVfHuu+9SUlJC
      cXExOTk51NbWAnD48GF++ctfUl9fz7lz50LruN1uVqxYwdixY1m+fDkJCQm8+eab6LpOZWUl
      69ev57HHHuOv/uqv2LdvX2j+hEt99tlnbN26lcWLF7N48WI2btxIRUUFuq7z3nvvoes6P/zh
      D5k+fTq/+93vcLlcuN1u3njjDcaNG8fy5cux2Wz88Y9/vK7hvcWtIYAJv2KO7j/EVycMCYAY
      1NjYSG5uLiNGjCA9PZ27776b0aNHAxfGFlq8eDH33HNPp+aW06dPYzKZmDhxIk6nkzlz5nDi
      xAna2to4dOgQ5eXlFBUVkZeXx5QpUy4LAF3X2bt3LxMmTKCwsJDCwkImTZrE3r176ejooLKy
      krvuuouUlBRuu+02UlJSqKqqora2FovFwoQJEy7brhDCWNIEFIOKi4tZt24dK1asIDU1FZfL
      FZqa8+K8CJWVlZ3WaWlp6XSfQVJSEk6nk46ODpqamhg+fHio3b5v377s2rWLYDAY6paqaRqt
      ra2Ul5eH3rNPnz5s3rw5NLtbWtqF0S9VVaVXr160tLSEBu27dLuJiYl0dHSQnJxMIBAgEAh0
      qtXv9+Nyua742f3+6J8LAC6ccbmuczQI3eu9OcVEWFe/T1eCwUD4hQym61q3PpvJ642JG/88
      Xi/aJZ9PAiAGZWVl8eSTT7Jp0yZ27tzJv/3bv/H1r3+dgQMHXnUdn8+HxWLpNFOaqqoEAgG8
      Xi9WqzW0rNlsDs2zfGkABIPBTtcFrFYrXq+XYDB42cVji8WCz+dDUZRO21VVFUVRQjt9k8l0
      2YVhk8l01RviUlOTyM/Pvp6vyxCOhITrvqkvVlrFzGZzt25YVNXob165eFf+da8XI2M/WS0W
      9Es+nwRADFIUhezsbG677bbQ31evXs2yZcuu2hsoKSmJ9vb2UE+cYDCI1+vFbreTnJxMa2tr
      aNm2tjZsNlunnf3FnXJHx5fj8LS2tpKcnBwa+Mx3yUxdbW1t9O3bF7vdTltbW2i7gUAAn88X
      miviSj2GVFW96g1xubmZjB0b/cda9gTbdd/Up5lio0VWUZRu3bAYG4Mcdu+zESO921RVhUs+
      X2xULTppaGigsbERXdexWCwUFxfjcrm6vLCamZnJ2bNnOXfuXGi6ToCUlBQKCwvZv38/gUAA
      TdPYu3cvffr0QVGU0JG/oigUFhayd+/e0BH/xeUSExOxWCxUVlai6zoul4uqqiry8vJC221u
      br5su0IIY8kZQAyqqqrirbfeIi0tDZfLxd69e7n99ttRVZXt27dTW1tLS0sL9fX1rFmzhuTk
      ZG6//XYGDBjAiy++SGlpKbt27WLOnDlYrVZGjBjBn/70J1555RWsVivHjh3ju9/9LgB/+tOf
      +Oyzz3jyyScZO3Yszz77LK+++ioANTU1LFiwAKvVytSpU3nzzTeprq6mqqqKfv36kZ+fj67r
      DBgwgBdeeIGSkhJ2797N3LlzOzU5CSGMIQEQg8aOHUu/fv04cOAAFRUVzJkzJzSZTEZGBgC9
      e/cOzcfscDhQVZV58+axd+9eGhoaWLBgQej15ORkFi9ezJ49e9A0jenTp5Obm4vf72fbtm1M
      mTIl9N6LFy/mwIED6LrOnDlzQrOslZeXk5iYyPHjxxk/fjxjxowJNe9cut2FCxdSVlbW7c+e
      F/iCSe6d3V6/p9j0+4FEo8sQoksSADFIURQyMzMZMGAAXq+XgoKC0Gv9+/enf//+V1zPZrNx
      2223XfG1jIwMZs6c2em5xsZGCgoKGDduXOi5nJycy5a7WFNpaSmlpaXXtd3r1WhuYV9CRUTe
      62bKUwLyP5eIevJvNIbl5OSEul7erPefP3/+ZXcEG8nxhZ3cddE/JaRpoArSyiWiXPT8ny2u
      m9Vqvalt6aqqRl1bvdWtktIUXTVdiarFQo+XntU/KwOvFt33cWQ44qvZTgJACNEjLCYTCVHe
      X97WzbPd/Z42flVzKMLVRN7fDXYx4JLHEgBCCHGDgrqOW9eMLiOsr1YoASBii0WBxBi4fUVa
      gEQMkAAQMSXQKwnX5EKjywhLt3XjblJFwZWVEfliIszhcHRrvQzFQu8ovzKerER3fZEmASBi
      SrMti6Npo4wuI6zBqvW6d3WaycQXM6bdjHIiylpUSGY31puoJDMh2ocDUuMrAGLgXFoIIcTN
      IGcAQghxgzJcClMro393muLpfHEq+isWQogol92uMutY9DcfpbklAIQQIqLqkjX+ODT6J/T5
      ukOn9yWPJQCEED2i6tRZzn1+2ugyumRPTWTEuJLrXs9k85CYU3sTKoosk6VzSEkACCF6REtr
      B/UNreEXNFBisHs3c2m2fLy5j0S4msjTrJ1n05MAEEL0iIGJGyhM3Wx0GV0ypfQG7r/u9fJM
      acxPjMyItzdTuimp02MJACFEj7CZ2jCZm4wuo0uKqXuDwVlRyFCie5wjABNyEVgIYQC7YzYk
      Xz5fRFRxxtdUpRIAQogeoaCAEu33nnZzECfNi+atj2wpN4FJK+j0WAJAiGihQ7A9aHQVYel+
      3egSoo7Wfhjfkb82uoywTENeQU0rDz2WABAiWmg63iMeo6sIK9ArYHQJUcdttVGdkWN0GWEV
      WayddvoSAEIIcYPOJqfzwYiJRpcR1oLEJC4dyzXaG+SEEELcJBIAQggRp6QJSAjRI4611NNU
      X2V0GV2y+zIoD7/YLUMCQAjRI2o7WjjZcsboMrqUZNIkAIQQItKOqf3YFeWNzjlqCg8aXUQP
      kgAQQvSI8zhpVKJ7zmMLTqNL6FFRnsdCCCFuFgkAIYSIUxIAQggRpyQARETpuo6uy1gxQsQC
      uQgsIuqDDz5g+vTp2Gy2y17TNA1VlWOOeKXYWlEd0T1ippoQ/fP6RpIEgIiI9vZ2tm/fztat
      W2ltbWXYsGGUlZUBcPbsWdauXUt9fT0lJSXMmjULu91ucMWip1kzD5FQuM3oMrpkS8oFvmV0
      GT1GDsfEDQsGg6xevZqjR49isVhISEhg/fr1APh8Pl577TUcDgfz58/nxIkTfPDBBwZXLIQA
      CQARAS6Xi/r6eh544AF69erFzJkz+V//638BUFtbi8vlYs6cORQVFTFv3jz27WZPXOsAACAA
      SURBVNtHR0eHwVULISQAxA1LSEggMzOT1atXU1tbi9frxWy+0LrY3NxMbm4uiYmJKIpCZmYm
      DoeD9vZ2g6sWQsg1AHHDzGYzCxYsYPPmzWzcuJFnn32WadOmMXHiRFwuF3a7HUW5MNWeqqqY
      TCZ8Pl+3tpWlVDJK+VMky78prHwL4uyuUhF7JABERDidTubMmUNNTQ1jx47lD3/4A7169cLp
      dNLR0RHqARQMBvH7/VfsJXQtkmjAou6NcPWRZ2Kh0SUIEZY0AYkbFggEaGpqQtM0FEWhtLSU
      3r1709zcTHp6OmfPng01+dTV1eH3+0lKSjK4aiGEnAGIG+ZyuXjhhRfIyMjg9OnTrFmzhrq6
      OoqKikhNTSU9PZ1Vq1YxbNgwPv74Y8aMGUNCQoLRZUcdRVUpHFBkdBlhpaSnGl2CiBAJAHHD
      kpKS+M53vsORI0eora0lMzOTWbNmkZaWhqIoPPzww3z88cfs37+f8ePHM3nyZKNLjkoKYLVZ
      jS4jLJPJZHQJIkIkAMQNUxSFtLQ0Jk6cyNGjR5k2bVqnNv7k5GTuv/9+AyuMEQqYlO5dHO9J
      ihI0ugQRIRIAIqLuuusuLBaL0WXEJFUJUpqz3ugywkucDhQaXYWIgC4DwOPxEAgEeqoWcQtI
      S0vD5XLd0HsEg3KEKWJLIKDQcj76D3wCwc79fhS9i6Eb6+vrOX/+/E0vSohLeTyeq55FaP4W
      NG9DD1d0/UyOIhT1Ok+wdQ1av7g5BUWSPRXsKde92unWGtq8bTehoMixmCwUZ/S/7vXaPB6q
      W5pvQkWRVZSegcN64TrToEGDlC4DQAgj1NbWkp6ebnQZQtzSHA6HItcARNQxmUzSTVSIHiA3
      ggkhRJySABBCiDglASCEEHFKAkAIIeKUBIAQQsQpCQAhhIhTEgBCCBGnJACEECJOSQAIIUSc
      kgAQQog4JQEghBBxSgJACCHilASAEELEKQkAIYSIUxIAQggRpyQAhBAiTkkACCFEnJIAEEKI
      OCUBIIQQcUoCQAgh4pQEgBBCxCkJACGEiFMSAEIIEackAIQQIk5JAAghRJySABBCiDhlNroA
      IYSIdedcfo7Uu4wuI6xheYkk27/c7UsACCHEDerwaVQ2eYwuI6wBmQkk2798LE1AQggRpyQA
      hBAiTkkACCFEnJJrADGstbWVU6dOMXToUBRFueb1dF2/4vK6rgOEfa+ulgv32vXUKUSsyA+c
      5JG2140uI7zgY0Cf0EMJgBik6zotLS3s3LmTo0ePYrFYKC4uxmazEQgEqKyspKKigo6ODkpK
      Shg6dChms5mOjg62bdvGmTNnGDhwIOXl5ZjNF/4JnD59mk8//ZRAIMDo0aMpKiq6bGet6zrV
      1dXs3LkTgHHjxlFQUABAIBBg//79fPbZZ2RkZDBp0iScTidAl9sV4lYQq4c18n9hDGpqauK5
      557DZDLh8/l46623mDJlChMmTGDDhg3s2LGDoUOH4nQ6efPNN/F4PIwdO5aVK1fidrsZNmwY
      H3zwAe3t7UyfPp2mpiZeeOEFBg8eTGJiIi+99BKLFi2isLCw03br6+v57W9/S3l5Obqu89xz
      z/HUU0+RkZHB9u3b+fjjj5k8eTLHjh2jsrKSJ598EoAVK1bg8XhC2+3o6OD222834quLapqu
      ccZVa3QZYSVZU0iyJBtdhogACYAYVFlZSUZGBnPmzGHHjh3MmTMHv98PQH5+PqNGjSI9PR2A
      hIQEKisrKSgooKamhqVLl5KWlkZ2dja///3vmTBhAvv37yc3N5f7778fRVFwuVx8+umnlwXA
      zp076d+/P3PnzkVVVZqbm9m+fTt33HEH27Zt45577mHEiBGMGzeOn/70p1RXV2OxWKitrQ1t
      NysrizVr1jB+/Hjsdvtlny2eBbQAKypfMLqMsCbmTOe2nGlGlyEiQC4Cx6DU1FRqa2vZv38/
      wWAQm81GUlISAGVlZWRkZKAoSqiZKD8/n3PnzpGdnU1qaiqKolBQUIDJZOL8+fPU1NQwePBg
      TCYTqqoybNgwamtrQ+35AJqmcfr0aYYOHYrJZEJRFIYOHUpNTQ0ul4tgMEifPn1QFIWEhASK
      ioo4e/YsTU1N5OTkdNquqqq0tbWF3jcQCHT6c+l2hRA3j5wBxKD+/ftz9913s379etra2jCb
      zcyaNYuEhITQMocPH2bFihUMHTqUiRMnsmPHDpxOJ6p6IfNNJhNWqxWPx0N7ezspKSmhdZ1O
      Jz6fD7/fj9VqBSAYDOL1eklMTAwtl5ycTHt7e+js4+KyF9/j4muXbtdsNoe2CxeuK2ia1unz
      +f1+2tvbI/mVxYRA0Et63XGjywjLZBlMe2L8/T5dMXncJIRfzHAutxvN/OVvJwEQg0wmExMm
      TCA/P5/169dTW1vLK6+8whNPPIGu66xfv56NGzfyta99jdGjR4eOyj0eT6gnjqZpBINBrFYr
      drsdt9sden+v14vJZOp0oVZVVcxmMz6fL/Scx+PBbreHzgiCwWCn1xISErDZbFfcrsViCX0W
      k8nU6fNZLJZOQRMvggGV3FOHjC4jrLSsaXH5+3TJEwu7/wtNwlzy20kTUAzy+XwEAgEURSEz
      M5MFCxZw4sQJdF3n4MGDbNmyhUWLFoV2/nCh2aihoQGX68J4JS0tLbhcLpxOJ1lZWVRWVqLr
      Orquh64xXDxqhwsBkJ6eTlVVVaiJprKykuzsbOx2O8FgkMbGRuDC2UJNTQ1paWmh7V4MmObm
      Ztxud6iH0JUoihKXf2KJ0d9V1P0x+ge5Rgpf/nYgARCTdu/ezW9+8xsOHjxIQ0MD7777Lv37
      90dRFHbu3MmAAQNQVZWTJ09y4sQJGhsb6d27N1arlQ0bNvDFF1/w1ltvUVZWhtPpZPjw4Rw+
      fJgDBw7w2Wef8cknnzBmzBgAqqqq2LhxI4qiMGrUKHbu3MmhQ4c4dOgQO3fuZPTo0TgcDsrK
      ynjvvfc4efIkH3/8MYFAgOLiYnr37o3ZbObjjz+murqat956i0GDBnUZAEKIniFNQDFo8ODB
      eDweDh06RENDA2PHjmXq1Knouk5mZianTp3i7bffDi1fUlLC3Xffzde//nXefvttjhw5Qq9e
      vZg9ezYABQUF3HPPPaxfvx5d15kyZQqlpaXous66detITr7Q5a+4uJgZM2bwwQcfADB79uzQ
      hd8ZM2bwzjvvsGrVKux2O4888gg2mw2ABQsWXHG7QghjKbp0uYhZ1dXV7Nmzh/vuu++a1wkG
      g/h8Pux2+2XNDj6fD13XsVqtKIrC2bNnefHFF/nud78bukis63rooq/FYun0Hrqu4/F4sFqt
      l7Xrd7Xdrzpz5gy5ubnX/JluFVrQQ/2nf2l0GWE5Cx8kqeB+o8uILo3H4GAM3Ak88jFIvXAn
      sKIoipwBxLCUlBSGDRt2XeuYTKZOvYUudWkvHoCkpCQee+yx0BkAXGg//Opyl752tffuarvi
      gmAQNq23GV1GWEOnmxlSYHQVIhIkAGJYSkpKp+6bkZaQkCA77Z6kwyWdsaJWwC+NBrcKuQgs
      hBBxSs4AhIgSiqKQ6EwyuoywLNbob6YS10YCQIgooaoqw0eNN7qMsDLzehtdgogQaQISQog4
      JQEghBBxSgJACCHilASAEELEKQkAIYSIU9ILyACaprF+/XrGjx+PyWTiueeeo7m5mW9/+9sU
      FxcbXZ4wiKJopKftM7qMsBLs2cAQo8sQESABYIAzZ86wcuVKJk+ezIYNGzh+/DgjR47kN7/5
      DcuXLw+NlS+u4EQVHDxgdBXhzbwLrvMuap+m8Exlxk0qKHLmOB3cnW90FSISbigAzpw5w4kT
      JzCZTPTv3z80Dy1AXV0dH3zwAS6Xi/nz55OUlMRHH31EVVUVY8eOZeDAgXR0dFBQEH+DirS0
      tJCZmYnFYmHr1q088MADlJWV8dOf/hSv1ysB0BW3GxobjK4iPC0YfpmvroJCZUf0T7TS7Jd/
      n7eKbl0D0HWdnTt38qtf/YojR46wb98+fv7zn/P555+HXl+1ahVOp5M5c+aQmprK3r17OXz4
      MDNmzGDQoEFUVFSwdevWiH6YWJGVlUVNTQ1r1qzh0KFDDB8+nHPnzoWmaRRCiJ7QrTOAtrY2
      3n//febPn8/w4cMB2Lx5M2vWrOGpp57C6/XS0NDA/PnzSU5Oxu/3U1tby6BBgygoKMBqtTJ6
      9GhGjhwZes+L88BqmkZSUhJWq5VAIEBzczMul4ucnBzsdntkPrXBsrKy+M53vsPatWtZsmQJ
      mZmZbNmyhTvvvFMCQAjRY7oVAGfOnMFmszF48ODQ2O5jx45ly5YtHD9+nPXr19PS0sKLL76I
      3W4nNzeXgwcPoigKBw4cYOLEiaSkpFBZWcmDDz5IW1sbK1as4PTp06iqyqBBg7jvvvt48803
      OXbsWGjKwSeeeKJTM1MsmzZtGmPGjKG9vR2Px8PMmTOl6UcI0aO6FQCXtmFfZLFYSEpKwmQy
      sXTpUv7xH/+Rp59+OjR59DvvvIPD4eCOO+4AYOfOnaEJxj/55BM0TeP73/8+FouF1tZWTp06
      RVVVFUuXLiU5OZk33niDrVu3Mnfu3Bv9zIbTdZ2NGzeyatUqmpubWbJkCW1tbTQ2NvLII4/E
      3PywQojY1K0AMJvNBAKBTs9dnFD8qzNBXbozu9rk15WVlUyZMgWHwwFAZmYmR44cQdM09u3b
      F3r/mpqa7pQbdaqrq3n11VdZsmQJO3bsIBAI0L9/fz7++GN8Pl9oKkUhhLiZuhUAGRkZ1NfX
      097eHprcu729nebm5m5NUGIymdA0rdNzqqqi63ro+d69e98yzT/19fUUFBQwcuRIjhw5AlwI
      R7fbTSAQkACIUyZdZ8LpeqPLCKugrcPoEkSEdCsAcnNzSUxMZP369dxzzz3ous6aNWsoKCgg
      MzOT651meODAgWzcuJGBAwdisVhoaGigV69e+P1+SkpK6NWrFw0NDbfMGUBRURFVVVVs2rQJ
      l8tFY2MjmzdvJi8v75a50C2un1nTeOTYcaPLCCtl+MjwC4mY0K0AsFqtPPTQQ7z66qssW7YM
      Xdfp06dPqP1a13USEhI6NfckJCR0umZgNptDR7qTJk3izJkz/PjHP0ZVVUaMGMGDDz7IhAkT
      +I//+A8sFguapt0S7f9woYlr2bJl/Md//AcVFRUoisK4ceP43ve+d1kTmhBC3CyKfr2H65fQ
      dZ2WlhZMJlOnicO7y+12o2kaDocjFB6BQACXy4XT6URVb62hi3RdD11LkR5AXzpz5gy5ublX
      fK1y5w72v/9eD1d0/e7+66dwJF9fc6jm8VDz6F/epIoiJ2X+g6Q8cL/RZUSXxmNw8HWjqwhv
      5GOQ2gcARVGUG7oTWFEU0tLSIlIXcMUJyM1mc0TCJRocOnSI48evfoqfnZ3NbbfddssFXSSd
      9XrZ1dxsdBlh3fGVa1pCRCMZC6gHnTx5kk8++eSqr5eUlDBu3LgerEgIEc8kAHrQ3Llzb5nr
      GEKI2CcBYJD29nZ27dpFW1tb6LmsrCzGjh0rTUBCiB4hAWAAt9vN9773PQBOnz7N4MGDOXXq
      FBMmTGDMmDEGVyeEiBdRf6jpcrkuu0ks1lVXV2O1Wvl//+//MXjwYJ555hmeeuopLBaLDAMh
      hOgx3ToD0HWdU6dOsXv3blwuF9nZ2YwaNYrMzMxI18fzzz/P448/TmJiItu3bycrK4t+/fpF
      fDs9SVEULBYLqqricDhoamoiPz+f119/nY6ODpKSkowuMWpZLRaSkpxGlxGWokT9sZUQ3QuA
      06dP89JLLzF27Fjy8vKoqKhg06ZNzJs3L9L10dTUhKZp6LqOz+e7JW6U6t27N16vl46ODsrL
      y/nZz36GzWbD4XDIcNBh5CWnM7FosNFlhGUzy30dIvp1KwBOnjxJ7969mT17NoqicNttt+Hx
      eNA0jRMnTtCrVy8SEhLQdZ3Dhw9TWlqK2+2muro6NGZQUVERAwcORFEUampq6OjooLa2FoAh
      Q4aQnZ3daZuqqlJYWBgaa0jTNI4cOcKpU6fIzc1l2LBhWCwW/H4/hw8fpqmpidTUVEpLS0Mj
      kkaLxMRE/umf/gmn08ns2bNxOBw0NzczdepUGQcojLZzAaqPuIwuI6xRfg35JUW061YAZGdn
      88477/DJJ58wZswY7HY7DoeDQCDA+++/z7333kthYSEAq1at4gc/+AF1dXU899xzDB8+nMzM
      TF5++WW+9rWvMXr0aLZt28bu3bsZNWoUbrebzZs3s3Tp0sualDZv3sywYcNIS0tjw4YNbN++
      nVGjRrFp0yaqq6u57777WL9+PXv37qWsrIyKigra2tqYNm3aDX9RkXLxekZWVhZwoTdQVlYW
      w4cPv+rdr+JLx1ULqy3R3wR0t6ISXYcdxtt17DR1jW3hFzRQYoKV6eVFRpfRY7oVAP369ePB
      Bx/kgw8+4N1332XUqFHMnTsXq9UaGhb6okv/XlJSwre//W0URaF3795s2bKFUaNGoes6c+fO
      ZeLEiWiaxiuvvMKBAweYPn16p+1efC+v18uWLVt44oknyMvLY/jw4bz00ktMnz6duro6ysvL
      mTFjBqqqRtVF1fb2dv7qr/6KJ554gnHjxtHc3Mzjjz9OIBBA0zSWL19OeXl5VNUsRKR8vKuK
      rYeje0DHvHSnBEA4qqoyatQoRo4cyalTp3jnnXd49dVXeeyxx7pcT1GUUB/3Pn368P7773d6
      T0VRMJlMFBQU0N7eftX3aWtrw+Vy8f7772MymQgGg/h8PjweD1OnTuWNN95g79699OvXjzvu
      uOOmXJzujvr6etxuN4MGDQLg9ddfJz8/n3/913/lww8/ZOXKlQwfPhyzWXrnCiFuvm7tabxe
      L2azGZPJRFFREfPmzePZZ58FuOwM4Ep0Xae2tpbk5OTLjnY1TaOuro6CgoKrrm+z2bBYLIwb
      N65Tj5nU1FSys7NZtmwZNTU1fPLJJ6xZs4ZFixZFxVG1x+MJNZd5vV4++ugjvve972E2m+nb
      ty+tra34fD4JAHFLutuxg5FJnxpdRpcczlwgfu7W79aeZvv27VRVVTFq1ChsNhtbtmyhX79+
      qKqK2Wxm//79BAIBDh8+jNvtDq13/vx5Pv/8c9xuN2+99RZ33XVX6LXa2loqKys5efIkx48f
      584777zq9hMTEykuLmb79u1Mnz6djo4ODh06xKxZs1i3bh15eXlkZWWRnJyMyxU9FwyzsrLw
      +Xxs2bKFmpoaNE1j/PjxwIURMO12u4wKKm5ZAy1fUGw/YnQZXVJsV295uBV1KwCGDBlCS0sL
      W7ZsASAvLy/U5j59+nTWrVvHyZMn6du3L6NGjQp1bWxububjjz9G13VmzpzJ6NGjQ+/5+eef
      09jYiM1m45FHHgn1AiovLw+tP2DAADIyMlBVlfnz57Nu3Tref/99LBYLQ4cOxel0UlRUxNat
      W0Mza82dOzcqjv7hwjwAjzzyCK+++irBYJDvf//7JCQk4Pf72bx5M5MnT5ajf3HLes0ynr32
      658xsCdlWdP5sdFF9KBu7W3S09O55557Qv3zTSZTaCdbUlISulHLbDZ32vn26dOHRYsWAVzW
      n3/q1KmMGzcOVVU7jYVz//1fjjs+ceLE0N+Tk5P52te+RjAY7LTOkCFDGDRoEJqmoapqVN03
      oKoqM2fODH2Oi3Mgm0wmnn766U7zIAhxqzmrJHNSzTK6jC551egOqEjr9uHmxQu2V3r+Ss0Y
      FouF5OTkK66TmJiI3W6/7qNfRVGuuI7JZIqqHf+lFEW57L4EVVVJTU297ve6eK1FQkMI0R09
      1t5QVFREUdGVu1fNmTOnp8q4pbS2tnLixAlGjBhxXSGg6/oVl7/WQOlquXCvSVgJET2kwTkG
      6bpOY2MjO3bs4NixY6iqysCBA0Mzqvl8PioqKmhtbe3UbNbW1saWLVuor69n4MCBjB07NnS2
      Vl1dzbZt2wgEAowePTp0l/ZXt1tVVcX27dtDd4BfDPVAIMCuXbv47LPPSE9PZ9q0aaGZ3Lra
      rhDCODJiVQxqaGjgueee4+jRo7jd7tDdzwB1dXW88MILvP7663z66Zdd7gKBACtXrqS6uprS
      0lI2btzIpk2bAGhsbOS3v/0tdrud7OxsXnvtNU6dOnXZduvq6vjd735HamoqycnJvPjiizQ0
      NACwdetWPvroIwYMGMDZs2d5+eWXCQaDBAIBVqxY0Wm7mzdvvvlfkhAiLDkDiEFVVVVkZmYy
      d+5ctm/fzty5c0OTyzc1NVFaWsrEiRNDO3i4sPOuq6tj6dKlpKamkpGRwapVq5g8eTL79u2j
      d+/eoR5T58+fZ/v27fTt27fTdnfu3ElJSQl33303iqKEzkLuuOMOtm/fzj333MOwYcMoLy/n
      pz/9KadOncJisXDmzJnQdtPT01m9ejWTJk3Cbrf34LcmhPgqOQOIQRkZGdTU1LBz504CgQBW
      qzV0YbmsrIzp06dfNqT0uXPnyMrKIiUlJTQUh8Vi4fz585w+fZqysjJMJhOqqjJ06FBOnz7d
      6Ya+izfoDRkyJHTX9pAhQ6itrcXtdqNpGoWFhSiKgt1up2/fvjQ0NNDU1ER2dnZou/n5+ZjN
      Zs6fPx96X7/f3+lPuBsJhRCRIWcAMai4uJh7772XDz74gJaWFuDCfMOJiYlXnU6yvb0dp9MZ
      et1kMmGxWPB4PLS1tYXa6+FCryyfz4ff7w/dg3FxuI2LXVfhQlfctrY2/H4/QKehrJ1OJ+3t
      7fj9/itu1+v1Ale+c9zv93eaKvNSF9eLdh0dHdjU4PWtFCOfzefzXfX36crFs9Ropmtatz6b
      2eMm4SbUE2kut5ug6cvPJwEQg0wmE2PHjiU3N5ePPvqI5uZmfve737F48eKr9rJJSEjA4/GE
      euJomkYwGMRqteJwODrdMe3xeDCbzZ262F68y/vSHbDL5cLhcITuA7kYBBffIyEhAZvNhtvt
      vuJ2L36Wr3bZtVqtV50UJ1aGy05MTCQpyRF+wUtoFgvNN6meSOrq9+lKLNzkqKhq9yZk8sbC
      7h8cCQlwyeeL/l9EXMbr9YZ29Onp6UycOJF//dd/7bKbZVpaGg0NDbhcLhITEzl37hxutxun
      00l2djaVlZWMHTsWgOPHj5OZmdnpbEJVVTIyMqisrGTw4MEoisLx48fJzs4mISEBTdNoaGgg
      NTWVQCDAF198wZgxY7BarZ2229TUFNquiC+9UpMZmB3dN4Jlxtm/SwmAGLRnzx52795Nfn4+
      Z86c4Y9//CMDBw5EVVXq6+tDk+u4XC6qqqqwWCz06tULu93Ohx9+yIgRI3jvvfcYPHgwTqeT
      4cOH8+tf/5pdu3Zhs9n485//zIIFC4ALQ3ScOHGCO++8k9GjR/Pyyy9TUFCAoijs3r2bJ598
      koSEBIYMGcLatWuZM2cOFRUV6LpOcXExuq5js9lYt24dw4YN47333mPIkCFRN0mPuPlS7HZy
      kqN7utO0hOs7a4t1EgAxaOjQoWiaxoEDBzh79iy33XYbkyZNAuDQoUMcP34cuHDUv379ejIz
      M7n//vtZsGAB7777LmvWrCE/P59Zs2YBF6aovP/++9myZQu6rjNjxgxKSkrQdZ3169eTkZEB
      QN++fZk9e3aoG+e9994bCoPp06fj9Xp56623cDgcfOtb3wo18yxcuJB3332XN998k4KCgtB2
      hRDGUnTpchGzqqur2bNnD/fdd981r3Oxb77Var2suehiG/7FMZzOnDnDSy+9xJIlS0Ltorqu
      hy7mfXWsp4vzNl8cKvxat/tVZ86cuersaAdrz7O5oumaP69RHh1fgNN+fcdXmsdDzaN/eZMq
      ipyU+Q+S8sD94Rf8ijUH9nCsof4mVBQ5aQkOnpww9fpXbDwGB1+PfEGRNvIxSO0DgKIoipwB
      xLDU1FRGjhx5Xet0NU7SV+/OTUtLY9GiRZ3a66821tPF1652kTZS4zNZLObrvrhqBEWVIS9E
      9JMAiGHJycmdum9Gms1mi5leN0KI6yc3ggkhRJySABBCiDglASCEEHFKAkAIIeKUBIAQQsQp
      CQAhhIhT0g1UxJTcQC3jPbuNLiMsq34vEP33K4j4JgEgYkqqdo5U/xGjywhPl+EuvmqMmkSJ
      6g+/oIGsanxNUiQBIIToEXlYyVWi/KxIsYZf5goqfB2sOlsZ4WIi71G/h4JLHksACCHEDWoP
      Bjnq7TC6jLBcutbpsVwEFkKIOCVnAEJECc1spmL+tY/sapR+ZSWkGF1ElFF1sEb/jJeoXxn7
      WQJAxBSfAu4YOG9NUrp3eq1HYMTUm00PM5z31fj8Afzu6J73WFUUrjzWbdeKz5l4akv0X0Du
      NVmFnC8fSwCImHJI11kfvM7J1g2wWIebN05rbDp09AvqDlcbXUaXEtOTmDF1yHWvdyrDzwtT
      W29CRZH1VHKAfpc8lgAQMcV8UifhHS38ggZTyoHoPyDsUUnmBryWE0aX0SW7Jb1b6+VoHub4
      aiNcTeSl675OjyUAREzpjZPpakH4BQ1mJ/qbcnpaX8dW8lPWG11Gl5SkQmCp0WX0GAkAEVMU
      pwklPwYmqTHJjGBfZTL3RbEOM7qMLimWK09FequSABAxpSMrnbqRZUaXEVY/i7lbFxNvZVbr
      YEiI8hvBbN27cuO1ZHImbUaEi4k8nzm102MJABFTOizJ1DqLjS4jrKAq/2vFE6e1F2UZDxpd
      RlgOc0anx/KvVAghblAKJspVp9FlhGVSOl+bkgAQIlpoOp5jHqOrCCuYFQN3PPUwzXUc3/Ff
      GF1GWPbSf4SUktBjCQAhooUOWmv03+OgefXwC8WbwHm0tgNGVxGWHuw8XpEEgBBC3KDatGw+
      nHCX0WWEdW9yGpf2c5IAEEL0CE3X0fXovolPQe/WEB4Bk4m2hMSI1xNpQbXzp5MAEEL0iE2n
      KzhZscvoMrqUlJHNgywwuoweIwEghOgRbsXOeaK7p4waZ9N4SgAIIXrEsav9UAAAFVNJREFU
      IaWErabobibJU508anQRPSgGBtYVQghxM0gAiIjSNA1dl26CQsQCCQARMbqu89prr+HxeDqF
      gK7r6LpOMBiUcBAiisg1AHHDdF2nvr6e999/n4MHD9LQ0MDw4cOZMWMGuq7z+eefs2rVKlpb
      WyksLOThhx8mLS3N6LKFiHtyBiBumN/v57//+79JSkqiV69eTJ06lYaGBgBcLherVq1i6tSp
      /PjHPyY1NZU//vGPciYgRBSQMwBxw3w+Hx0dHZSXl9PS0kJZWRmjR48GoLa2FpvNxtixY7Hb
      7dx9993853/+J21tbSQny6SJ8cSScRRb771Gl9Ela0o2MNfoMnqMBIC4YQ6Hg9LSUl599VU6
      Ojqoq6ujuLgYRVFobW0lMzMTm+3CJC5Op5PExEQ6OjokAOKMaj+HOem00WV0yZQY3XcqR5o0
      AYkbpqoqc+bM4YEHHsBut/Pb3/6WN954A7/fj8/nw2KxoChKaFlFUQjGwMTuQtzqJABERFit
      VoYOHUp+fj5Llizh/7d3t8FRlff/x99nz95lk2U3myzJJgRCwQQioAFCRCLgrw3SvzIMN2r/
      doIiznRaR8c6Y3Wmdw/qdOoTR8ZxWqfKUKfgdMQyLc7QiVopgQQkgVAwBBoCSAaSkE32JrtJ
      9u78HvBjS0QTkQ1n435fj5Lds+d8c3ZyPudc13XO1dnZSXt7O1OmTCEYDJJIXD2zisViRCIR
      rFaZMV0IvUkAiFsWiUT4z3/+kxz+mZOTg8PhIBKJ4Ha76enpoa+vLzkiyGAw4HA49C5biIwn
      fQDilkUiET744ANGRkbo7+/nj3/8IwDl5eXYbDbmzp3LW2+9xezZs/n3v//N2rVrMZlkxtwb
      KGAyp/9+UVV1/IXEpCABIG5ZTk4OTz/9NF1dXbz//vvU1tZSVlaW7Phdv349J06coK+vj7q6
      OsrKynSuOD0ZFAMzytJ/vmOHyzn+QmJSkAAQKWE2m/nOd75DQUHBqIP/tfcWLVqUku3Y8FFA
      R0rWNZFUnICcKYv0JgEgUmrdunWYzeYJW3+h0o5T3Tlh608VM/MAy7jLCaGnMQPA7/czPJz+
      k1SL9BIOh2/p89FoNEWVTDKKhsvWqXcV48oy5QDFepchUkDRxrgn3+fz3fI/sxA3q6+vb4z7
      BDRI82kFAVC+YfPPpPjbFEC56Y8ltEnwpFgF1G/43SUmwXdnUP478HPhwoXKmAEghB66u7sp
      LCwcf0EhxDemKIoi9wEIIUSGkgAQQogMJQEghBAZSgJACCEylNwHIESa0DSNmJb+Q2ANivqN
      R8qI9CIBIESaiCaivP7Zy3qXMa5lBf/DPQUr9S5DpIAEgBBpQkHDEvLpXca4jNERvUsQKSIB
      IESaUBJxZp3Yp3cZ43Ja5sE0vasQqSCdwEIIkaEkAIQQIkNJAAghRIaSPgAhhLhFvqEYZ64M
      6V3GuOYW2LBb/juEVwJACCFuUXAkzqne9H9y8oxciwSAEOnIYDAw9470ny7T6XLpXYJIEQkA
      IdKFZiTqe1zvKsaVGCnXuwSRIhIAQqSJeCLOp0c/0ruMcd2Va8ZVnv5XKmJ8EgBCpAtNYyQS
      0LuKccXiEb1LSEOTY6a6L87jJgEgRJpQVZV7V6zSu4xx5c+YqXcJaackdoHHB3foXcb44luA
      Gclf5T4AIYTIUHIFIEQaMZvS/2FwqkEeBvdtIQEgRJpQlDj5+S16lzEui61E7xJEikgACJEm
      4prCJ1fSf4z9HEcWMhD020ECQIg0EdUMvHluxvgL6qwu3yEB8C0hncBCCJGhJACEECJDSQAI
      IUSGkgAQQogMJQEghBAZSgJACCEylAwDFSJNWOJx3tjXqHcZ48qdWgwLF+tdhkgBCQAh0oiq
      aXqXMC5lEtQovh5pAprENE1Dk39GIcQ3JAEwiXm9Xvbv33/TIZBIfPlzy79uoIy1XCKRGPM9
      IUT6kCagSUjTNDo6Ojhw4AAXL14kHA5zzz33kJubSzgcprGxkVOnThEKhZg7dy6rVq0iKyuL
      np4e9uzZQ3d3N3PmzOHBBx8kKysLgOPHj/Pxxx8Tj8e59957Wbp0KQbD6PODRCJBc3Mz+/fv
      B2DlypUsXny1LXh4eJh//OMftLW14XK5WLt2LR6PByC53Z6eHsrLy0dtVwihH7kCmITOnj3L
      7t27MZvNOBwOhoaG8Hq9ADQ3N+Pz+Vi+fDlr1qyhq6uLf/7znwSDQXbs2EFRURGbNm0iFAqx
      a9cu4vE4Z86cYe/evaxYsYKHHnqIxsZGmpubb9juyZMn+eSTT3jggQeora2lvr6eU6dOEY/H
      2bNnD/39/Tz22GPccccdbN++Hb/fn9xucXExdXV1hEIh3n//feLx+O3ebUKIL5ArgEnI7/ej
      KAqLFy/m5MmTrFu3DkW5OtlbTU0NiqKgKArxeJyWlhYikQgXL17EYDCwatUqjEYj69at47XX
      XsPn83H06FEWLVrEwoULURSF4eFhDh48SFVVVXK9mqbx6aefsnz5cubPnw9AIBDg0KFDFBUV
      0dHRwZYtW5g6dSrTp0/n9OnTdHR0YLVaUVWV2tra5Ha3bt2K3+/H5XJ9aXOR9GsIcXtIAExC
      c+fOpaWlhTfffBO3201nZyelpaWoqppstvH7/fz1r3/l0qVL/PjHP+bMmTM4nU6Mxqtfudls
      xmazMTQ0hM/nY86cOcmDfX5+PuFwmFgshslkAiAejzM0NITL9d/HFbvd7mTAqKqabNZRFIW8
      vDyCwSCRSGTUdk0mE1lZWQwNDSXXG41GR/19iUQiI/sLtMTkCD5N0zLy+xmTpk2K5pSEpsF1
      350EwCRks9nYsmULLS0t1NfXs23bNlauXEltbS2aptHZ2cm7776Lx+PhmWeeYcqUKSiKkuy8
      vfYzXD1YGwyGUWfd1793ves/d225L/YTXP/etSuR67f7RUajMRkO13/2WkBkEm1kcsy0FYvF
      MvL7GYsaGcGqdxFfw8jICInrvjsJgElKVVUKCwuZN28e8+fPZ9u2bXz3u9+lu7ubd955h+rq
      6mRzD4DD4WBgYIBoNIrZbGZkZIRwOIzNZsPpdNLd3Z08SPf09JCTk4OqqqO2l52dzZUrV5gz
      Zw4A3d3dOJ1OLBYL8XicwcFB7HY7mqZx5coVysvLsVqtDAwMJK8mhoeHk9v9Kkajkezs7Ind
      gWkooar0613E12AymTLy+xnT0GQ4/EOW1QrXfXeT4apFfMFnn31GQ0MDfr+fWCzG5cuXyc7O
      RlEUGhoamDVrFqtWrUJV1eTZd2FhIcFgkI6ODjRNo7GxEZfLhcPhoLy8nJaWFoLBIENDQxw4
      cICKigoURSEQCPD555+jKAoVFRU0NTUxODhIKBSiqamJiooKsrOzcbvdHD58mHg8zoULF7h0
      6RKlpaV4PB78fn9yu01NTeTl5eFwOPTejUJkPLkCmISysrJobW3l0qVLDA0NUVRUxKOPPoqm
      afT09HDu3DlOnTqVXL6yspKHH36Y2tpa/vSnP2Gz2YjFYjz11FMYDAYqKipobW3ld7/7HYqi
      4PF4qKqqAuDDDz+ku7ubp59+mgULFnD8+HF++9vfAlBaWspdd92FqqqsXr2at99+m9bWVkKh
      EA899BBOpxOA2tpatm/ffsN2hRD6UjQZcjHpXOuEO3/+PK2traxduzbZXBONRm/ooFNVFZPJ
      hKZpDA4O4vP5cLvdWCyWZLt8PB7H6/WiaRp5eXkYjUZCoRCvvPIKmzdvZubMmcDV9t/+/n40
      TSM/Pz+5XU3TGBkZoa+vjylTpmC320eNIPqq7X6Z7u5uCgsLU77f0l1ieJiuJ57Uu4xxOR55
      GMf6dXqXkV76TsOJHXpXMb7KLeC8Ou2ooiiKXAFMQoqioKoqNpuNgoKCUZ2oZrN5zM/Z7Xbs
      dvsN76mqytSpU0e9Fg6H+f73v09paWnyNaPReMNy19ZttVqZNm3aTW1XCKEfCYBJzOPxJO+2
      nQhutxu32z1h6xdC6EsaYoUQIkNJAAghRIaSABBCiAwlASCEEBlKAkAIITKUBIAQQmQoCQAh
      hMhQEgBCCJGh5EYwnfT09CSfk3/06FECgQD33nuvTJU4nrMdcOyo3lWM7/89BGM88VSIdCAB
      oAO/38+LL77I1q1bOXv2LL/5zW8oLCzk5MmTPPPMM/KgtLGMjEDAr3cV49NkwhSR/uRIo4NL
      ly7hcrmw2WzU19ezadMmfvWrX9HZ2Uk4HNa7PCFEhpAA0EFWVhbBYJCLFy9y/PhxKisrGfm/
      2aCun4RFCCEmkgSADkpKSigrK+Oll17izjvvpLS0lBMnTlBWVobVOjlmFhJCTH7SB6ADVVV5
      7rnn8Hq9uFwuDAYDy5Ytw2q1jvmcfCGESCUJAJ14vV52797N2bNn+eEPf4jX68VisXDffffp
      XZoQIkNIE5AO/H4/v/jFL4jFYuTk5DAwMEB+fj4ffPABsVhM7/KEEBlCAkAHp0+fprCwkJ/8
      5CfMmjULAIfDQSgUSnYGCyHERJMA0EFubi69vb309vYSj8eJRCI0NzdjNpsxmUx6lyeEyBC6
      9gFEo1Gi0Si2FN0xGQgEyM7OTvuhlLNmzaKmpoYXX3yRwcFBDAYDJpOJ559/fsw5fYUQIpVu
      OgCi0Sh79+4lFAqNXpHRSG1tLU6n82uv6/jx4/T19bF69eqbLeNL/fnPf2bDhg0UFBSkZH0T
      xWAwUFdXx4oVK7h8+TIAM2fO/NLJ1oX4tnj3oxOcPHdF7zLGlOfI4vlHlupdxm1z0wFgMBiY
      OXMm4XCY06dP09/fz9KlS1FV9abPXsPhcErvfA0Gg8Tj8ZStL9X8fj+Dg4PJ341GIyUlJQDE
      YjG8Xi95eXkyFFR8K33e4+fkuV69yxiTx5Wjdwm31U0HgKqqzJ8/H7h60DIajVRXVyffHxwc
      5NChQ/h8PubOncudd94JQCKRoL29nfPnz2O321m8eDEAw8PDHD58mK6uLgoKCli2bBnRaJT2
      9nasVisdHR1EIhGWLVuG2+1G0zTa29tpa2sjKyuLpUuXkpube0Od0WiUw4cPc/nyZTweD0uW
      LEkG1MDAAMeOHSMcDuNyuZgxYwaxWIxYLJbslI1EIrS2tlJVVZWyA/Jf/vIX3nvvva98f9Gi
      Rbz88ssYjTI6Vwgx8VJ6pBkeHuatt97C5XIxffp0du7cyQ9+8APmzZvH3r17aWlpoaqqio6O
      jmRzx6FDhxgeHqaoqIg9e/aQn59PcXExu3btwmw2U1lZSW9vLzt37uTZZ5+lubmZv//979TU
      1ODz+Xj11Vd54YUXmDJlSrIOTdPYsWMH/f393H333TQ3N9PR0UFdXR39/f289tprlJWVUVJS
      wv79+6muriYvL4+//e1v/OxnP8NisdDe3s7HH39MVVVVyvbPli1beOKJJ77yfUVR0r7/Qgjx
      7ZHSAOjq6mJ4eJiNGzdiMpkwm800NjYyffp0jh07xpNPPsm0adOSy/f09HDfffexceNGFEXB
      6/Xi8/koLi7G4XDwxBNPkJeXh9fr5fXXXycej9PY2MiGDRu4++670TSNQCBAa2sry5cvT653
      cHCQtrY2fvnLXyavNl555RWCwSCNjY0sWLCARx55BEVRCAQCAJSVlaGqKu3t7SxYsIAjR46w
      ZMmSlDbHqKqaPMDHYjECgcCoJiuz2TwqyMSNRhIJwpGI3mWMy6HJELsvshvC5Bl8epcxplxV
      07uE2yqlATAwMEBfXx87duwAYGhoCE3TGBkZwWAwkJeXd8NnVFVNHmSvb/owGAzJxyJfez0S
      iRCNRpOdvIqiMGPGDPz+0Y8HHhgYwOVyYbfbAZgyZQoOh4NAIIDf76eiouKGA7vFYqG6upqm
      piamTZvGhQsXWL9+fSp2yw3i8Th/+MMfaGhoYGBgAIfDweDgIPfccw8///nPpQloDEd9Pvac
      PqN3GeN6MRbFoXcRaWazfS91eR/qXcaYFOd04P/rXcZtk9IjTU5ODrm5uaxevTp5EFMUJTm2
      PRgM3tKEJ0ajEVVV8fl8eDweNE2jt7cXj8czajm73U4gEGB4eBir1crQ0BDBYBCbzUZOTg7n
      z59n4cKFKIqSvPFKURQqKys5ePAgn3zyCSUlJRN2Nt7V1UVTUxO//vWveeONN3jhhRc4ePAg
      mqZJE5D41rqg5OE1TBt/QR1ZDYUs0ruI2yilAVBcXAzAkSNHKC8v5/Lly/T29vLoo48yY8YM
      3nvvPWpqarhy5Qp33HHHTa/fZDIxf/589uzZQzweZ2BggLa2Nr73ve+NWs7hcFBQUMCuXbuo
      qqqiubmZ/Px8HA4H1dXV/P73v8fn86FpGqdOnWLNmjUAOJ1OysvL2bdvH0899dSEHYxDoRBT
      p05l1qxZyauTZcuWsXXrVtavX5+y+yKESCfvmxZz0HrjgI104jE7eFvvIm6jWwqA4uJiLBZL
      8ne73c6TTz7JgQMHaGpqwuFwsHLlSlRVZd26dRw4cIAjR46QnZ1NZWUlRUVFo0bwlJWV4XK5
      MJlMVFZWJh+NbLFYWLp0KYqisHz5cgwGAw0NDZjNZjZv3pxsElqyZAk5OTkoisLjjz9OfX09
      H330EW63m7q6OoxGI0VFRTz77LN0dnZisVgwmUzJpiaDwcCCBQtoa2tj9uzZt7JrxuR2u7ly
      5QqxWIyioiJ27dqF3W4nGAyiaZnVBimE0M8tBUBpaSmlpaXJ3xVFwePxsHHjRjRNQ1GUZFu7
      zWajtrZ21Otf7BOorKxM/rxy5crkz1arlQceeAC42lF6//33s2LFChRFGTV94v3335/82el0
      8vDDD5NIJDAYDMk6zp07x8WLF5k9ezb9/f2cOXOG5cuXo2kafr+fhoYGqquryc7OvpVdM6b8
      /Hx+9KMfEYvFeOyxx3j11Vfxer1s3rxZzv6FELfNhPQ2Xn/g/zqvf5P1f53mmS9bzmq1cv78
      eQ4fPozFYmHNmjWUlpYyMjLC9u3bcTqdyXCZCNfO8K899jkej/PSSy9hsVjkMRBCiNsq44ab
      eDweNm3adMPrVquV5557bkK3HYlE2LZtGzU1NcybN49IJMLWrVs5duwYJSUl/PSnP6WwsHBC
      axBCiGtkqPJt1NPTw759+3C73QDU19dz6NAhnn/+eVwuF++88w6JRELnKoUQmUIC4Dby+/1k
      ZWXhcrnQNI3du3ezYcMGFi9ezIMPPkhnZ6fMByCEuG0kAG4ju91OJBIhEAjw2Wef0dnZmRzC
      eu2mOXkQnBDidsm4PgA9FRcXs2DBArZs2UIoFGLjxo243W4SiQT/+te/KC8vHzWsVgghJtL/
      AhjI2I2ImHIUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='358' name='Simple Bar Chart' width='384'>
      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
      brnlFv7u7/4u6KVqRUUFW7dupbm52frX9v2Ax+MJWjdu3LigB4uMjAxSUlLYtWsXzc3NuN1u
      GhsbsdlsTJo0iYceeqjdzR/O/FpctWoVJSUl1ncNBIIjVHlUA5B+raMvhGnr2LFj/OpXv+Lm
      m2/myiuv7PSx6+vr+fHHH7Hb7SQlJTFs2LDTng9G+rb333+fzZs388orr3T7uXw+H2VlZdTW
      1mK327ngggs6PZVIZ69Fj8fDk08+idvt5tJLL+WOO+44aXk0ElikA3Fxcda0ASJny263M3z4
      8DP6HonOXov5+fm43W4SExO56aabTlkevQQWETlHBLqG/v3f/z1RUVGn3F41ADnn2e120tLS
      yM7O7u2iSB8THx/fZT1++oKf/vSnzJw586TTSLeldwDSr3XmHYCIhKYmIBERQykAREQMpQAQ
      ETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABER
      QykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGU
      AkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykA
      REQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBE
      xFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQMpQAQETGUAkBExFAKABERQykAREQM
      pQAQETGUAkBExFAKABERQ/0/Jea86XRaZFQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Stacked Bar Chart' width='384'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
